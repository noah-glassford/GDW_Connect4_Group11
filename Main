//#include "pch.h" 

#include<conio.h>
#include <windows.h>
#include <iostream> 
#include <string> 
#include <cstdlib> //For Random numbers in AI 
using namespace std;

HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE); // For use of SetConsoleTextAttribute()

const string Title[6] = { " _____________________________________________________ ",
						 "|   __    _                 ___    _____              |",
						 "|  |  |  |_|___ ___     ___|  _|  |   __|___ _ _ ___  |",
						 "|  |  |__| |   | -_|   | . |  _|  |   __| . | | |  _| |",
						 "|  |_____|_|_|_|___|   |___|_|    |__|  |___|___|_|   |",
						 "|_____________________________________________________|" };

int startscreeninput = 0; //the input from the user on the start screen 
int levelAI = 0; //the input for the difficuty 
int turn = 0;//sets turn value to zero (for colour in draw board)
bool game = true;
int player;
int drop;
const int maxColumn = 7;
const int maxRow = 6;
double boardNum[maxColumn][maxRow];
string board[maxColumn][maxRow];
string columns[maxRow] = { "  1  ","  2  ","  3  ","  4  ","  5  ","  6  " };
const string boardSpace = "[( )]";

int AiEasy();
void getLevelAI();
void twoPlayer();
void OnePlayerEasy();
void basicGame(int, int);
void updateBoard();
void drawBoard();

void startScreenOutput() {

	for (int i = 0; i < 6; i++) {
		cout << Title[i] << endl;
	}
	cout << endl;

	cout << "	      1 = Two Player\n";
	cout << "	      2 = Single Player vs AI\n";
	cout << "	      3 = EXIT\n";
	cout << endl;
}

void startScreen() {
	startScreenOutput();

	int gamemode;
	cout << "Please type in either 1, 2 or 3 from the options above to coninue: ";
	cin >> gamemode;

	if (gamemode == 1) {
		twoPlayer();
	}
	else if (gamemode == 2) {
		getLevelAI();
	}
	else if (gamemode != 1 && gamemode != 2 && gamemode != 3) {
		cout << "INVALID ENTRY";
	}
}

void getLevelAI() {
	cout << "Please select the difficulty of the AI\n";
	cout << "1 = EASY\n";
	cout << "2 = MEDIUM\n";
	cout << "3 = HARD\n";
	cin >> levelAI;

	if (levelAI == 1) {
		//play against the easy AI 
		OnePlayerEasy();
	}
	else if (levelAI == 2) {
		//play against the medium AI 
	}
	else if (levelAI == 3) {
		//play against the hard AI 
	}
	else
		cout << "INVALID ENTRY";

}

void setupBoard() {

	for (int i = 0; i < maxColumn; i++) {
		for (int j = 0; j < maxRow; j++) {
			boardNum[i][j] = 0;
			board[i][j] = boardSpace;
			
		}
	}
}

void twoPlayer() {
	player = (rand() % 2) + 1;
	setupBoard();
	drawBoard();
	while (game) {
		cout << endl << "Player " << player << ", pick your row, ";
		if (player == 2)
		{
			cout << "You are X: ";
		}
		if (player == 1)
		{
			cout << "You are O: ";
		}
		cin >> drop;
		cout << endl;
		basicGame(drop, player);
		updateBoard();
		drawBoard();
		
		//check win condition 
		switch (player) { //update current player 
		case 1: player = 2; break;
		case 2: player = 1; break;
		}
	}
}

void OnePlayerEasy() {
	setupBoard();
	player = 1; //Sets human player first 
	setupBoard();
	drawBoard();

	while (game == true) {
		if (player == 1)
		{
			cout << "Pick your row, you are O: ";
			cin >> drop;
			cout << endl;
			basicGame(drop, player);
			updateBoard();
			drawBoard();
			player = 2;
			//checkWin 
		}
		else if (player == 2)
		{
			basicGame(AiEasy(), player);
			updateBoard();
			drawBoard(); //Draws board for the player after the ai goes 
			player = 1;
			//checkWin 
		}

	}
	//AI Game, human is Player 1 
}

void basicGame(int columnSelected, int playerTurn) {
	bool found = false;
	int column = columnSelected - 1;
	for (int i = maxColumn; i >= 0 && !found; i--) {

		if (boardNum[i][column] == 0) {
			boardNum[i][column] = player;
			found = true;
		}
	}
	//start at bottom of column, if its already occupied, go up to the next one 

}

void updateBoard() {
	for (int i = 0; i < maxColumn; i++) {
		for (int j = 0; j < maxRow; j++) {
			if (boardNum[i][j] == 1) {
				 // set color for the next print   
				
				board[i][j] = "[(O)]";
				
			}
			else if (boardNum[i][j] == 2) {
				
				board[i][j] = "[(X)]";
			}
		}
	}
}
void drawBoard() {
	system("CLS"); //Clears Board to reduce Clutter
	if (turn % 2 == 0) {
		SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 12);// changes colour to Red
		turn++;
	}
	else
	{
		SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 14);// changes colour to Yellow
		turn++;
	}
for (int i = 0; i < maxColumn; i++) {
	cout << columns[i];
}
cout << "\n";

for (int i = 0; i < maxColumn; i++) {
	for (int j = 0; j < maxRow; j++) {
		cout << board[i][j];
	}
	cout << "\n";
}
}

/*
This functtion will be used for the easy ai, which will just place a random piece on its turn.
*/

int AiEasy()
{
	drop = rand() % 7 + 1;
	return drop;
}

int main() {
	startScreen();
	cout << "Thanks for Playing\n";
}